/**
 * Teste simples para verificar se o orquestrador est√° usando as regi√µes do .env corretamente
 */

import * as dotenv from 'dotenv';
import { TaskOrchestrator } from '../scheduler/orchestrator';
import { getServiceRegions } from '../shared/utils';

// Carregar vari√°veis de ambiente
dotenv.config();

async function testOrchestratorWithRegions() {
    console.log('üß™ === TESTE DO ORQUESTRADOR COM REGI√ïES DO .ENV ===\n');

    console.log('üìã Verificando configura√ß√µes atuais:');
    console.log(`   ICF:  [${getServiceRegions('ICF').join(', ')}]`);
    console.log(`   ICEC: [${getServiceRegions('ICEC').join(', ')}]`);
    console.log(`   PEIC: [${getServiceRegions('PEIC').join(', ')}]`);
    console.log('');

    console.log('üéØ Criando inst√¢ncia do orquestrador...');
    const orchestrator = new TaskOrchestrator();

    console.log('‚úÖ Orquestrador criado com sucesso!');
    console.log('üîó As regi√µes ser√£o carregadas automaticamente do .env quando os servi√ßos forem executados.');
    console.log('');
    
    console.log('‚ÑπÔ∏è  Para executar um processamento completo, use:');
    console.log('   await orchestrator.runAllServicesWithMonitoring();');
    console.log('');
    
    console.log('‚úÖ Teste do orquestrador conclu√≠do!');
}

// Executar o teste
testOrchestratorWithRegions().catch(console.error);
