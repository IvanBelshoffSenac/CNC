/**
 * Teste avan√ßado para verificar diferentes cen√°rios de configura√ß√£o de regi√µes
 */

import * as dotenv from 'dotenv';
import { getServiceRegions } from '../shared/utils';

// Carregar vari√°veis de ambiente
dotenv.config();

async function testAdvancedScenarios() {
    console.log('üß™ === TESTE AVAN√áADO DE CONFIGURA√á√ÉO DE REGI√ïES ===\n');

    // Cen√°rio 1: Configura√ß√£o normal (j√° testada, mas vamos verificar novamente)
    console.log('üìã Cen√°rio 1: Configura√ß√£o normal do .env');
    const regioesPeic = getServiceRegions('PEIC');
    console.log(`   PEIC: [${regioesPeic.join(', ')}]`);
    console.log('');

    // Cen√°rio 2: Simular configura√ß√£o com espa√ßos extras
    console.log('üìã Cen√°rio 2: Testando parse de string com espa√ßos');
    const originalRegionsPeic = process.env.REGIONS_PEIC;
    
    // Temporariamente modificar a vari√°vel para testar
    process.env.REGIONS_PEIC = " BR , ES , RJ ";
    const regioesComEspacos = getServiceRegions('PEIC');
    console.log(`   PEIC com espa√ßos: [${regioesComEspacos.join(', ')}]`);
    
    // Restaurar valor original
    process.env.REGIONS_PEIC = originalRegionsPeic;
    console.log('');

    // Cen√°rio 3: Simular configura√ß√£o vazia
    console.log('üìã Cen√°rio 3: Testando configura√ß√£o vazia');
    const originalRegionsIcf = process.env.REGIONS_ICF;
    
    process.env.REGIONS_ICF = "";
    const regioesVazias = getServiceRegions('ICF');
    console.log(`   ICF vazio: [${regioesVazias.join(', ')}]`);
    
    // Restaurar valor original
    process.env.REGIONS_ICF = originalRegionsIcf;
    console.log('');

    // Cen√°rio 4: Simular configura√ß√£o apenas com v√≠rgulas
    console.log('üìã Cen√°rio 4: Testando configura√ß√£o com apenas v√≠rgulas');
    const originalRegionsIcec = process.env.REGIONS_ICEC;
    
    process.env.REGIONS_ICEC = ",,,";
    const regioesApenasComas = getServiceRegions('ICEC');
    console.log(`   ICEC apenas v√≠rgulas: [${regioesApenasComas.join(', ')}]`);
    
    // Restaurar valor original
    process.env.REGIONS_ICEC = originalRegionsIcec;
    console.log('');

    // Cen√°rio 5: Simular regi√£o √∫nica
    console.log('üìã Cen√°rio 5: Testando regi√£o √∫nica');
    process.env.REGIONS_ICF = "SP";
    const regiaoUnica = getServiceRegions('ICF');
    console.log(`   ICF regi√£o √∫nica: [${regiaoUnica.join(', ')}]`);
    
    // Restaurar valor original
    process.env.REGIONS_ICF = originalRegionsIcf;
    console.log('');

    // Cen√°rio 6: Simular muitas regi√µes
    console.log('üìã Cen√°rio 6: Testando m√∫ltiplas regi√µes');
    process.env.REGIONS_ICEC = "BR,ES,SP,RJ,MG,RS,PR,SC";
    const multiplaRegioes = getServiceRegions('ICEC');
    console.log(`   ICEC m√∫ltiplas regi√µes: [${multiplaRegioes.join(', ')}]`);
    console.log(`   Total: ${multiplaRegioes.length} regi√µes`);
    
    // Restaurar valor original
    process.env.REGIONS_ICEC = originalRegionsIcec;
    console.log('');

    // Cen√°rio 7: Teste de normaliza√ß√£o (min√∫sculas para mai√∫sculas)
    console.log('üìã Cen√°rio 7: Testando normaliza√ß√£o de caixa');
    process.env.REGIONS_PEIC = "br,es,sp";
    const regioesNormalizadas = getServiceRegions('PEIC');
    console.log(`   PEIC normalizadas: [${regioesNormalizadas.join(', ')}]`);
    
    // Restaurar valor original
    process.env.REGIONS_PEIC = originalRegionsPeic;
    console.log('');

    console.log('‚úÖ Todos os cen√°rios de teste foram executados com sucesso!');
}

// Executar o teste
testAdvancedScenarios().catch(console.error);
